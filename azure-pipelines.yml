# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- script: |
    echo "Getting Docker Version"
    docker version
    echo "$(DOCKER_BASE_BUILD_IMAGE):$(DOCKER_BASE_BUILD_IMAGE_TAG)"
  displayName: 'Get Docker Version'

- script: |
    docker build \
      --build-arg BASE_BUILD_IMAGE=$(DOCKER_BASE_BUILD_IMAGE) \
      --build-arg BASE_BUILD_IMAGE_TAG=$(DOCKER_BASE_BUILD_IMAGE_TAG) \
      --build-arg BASE_RUNTIME_IMAGE=$(DOCKER_BASE_RUNTIME_IMAGE) \
      --build-arg BASE_RUNTIME_IMAGE_TAG=$(DOCKER_BASE_RUNTIME_IMAGE_TAG) \
      --tag $(DOCKER_REGISTRY_IMAGE):$(Build.SourceVersion) \
      ./pipelines/aspnetcore
  displayName: 'Build Docker Image'

- script: |
    # Login to the Docker Registry
    docker login $(DOCKER_REGISTRY_FQDN) \
      --username $(DOCKER_REGISTRY_USERNAME) \
      --password $(DOCKER_REGISTRY_TOKEN)
    # Push image into Registry
    docker push $(DOCKER_REGISTRY_IMAGE):$(Build.SourceVersion)
  displayName: 'Push Docker Image'

- task: DownloadSecureFile@1
  inputs:
    secureFile: 'ucp-bundle-azure-devops.zip'

- script: |
    # Ensure unzip package is installed
    if ! [ -x "$(command -v unzip)" ]; then
      echo "Installing dependency - unzip"
      sudo apt-get update
      sudo apt-get install --yes --quiet unzip
    fi

    echo "Agent Temporary Directory contains:"
    ls $(Agent.TempDirectory)
    
    echo "Unzipping the client bundle"
    cd $(Agent.TempDirectory)
    
    unzip \
      -d ./bundle \
      ucp-bundle-azure-devops.zip

    # Source client bundle
    cd ./bundle
    ls -a
  displayName: 'Setup Docker Client Bundle'
